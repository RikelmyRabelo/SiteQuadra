# Script de Deploy para Railway
Write-Host "üöÇ DEPLOY RAILWAY - SiteQuadra" -ForegroundColor Cyan
Write-Host "===============================" -ForegroundColor Cyan

# 1. Verifica√ß√£o pr√©-deploy
Write-Host "`nüîç Verificando requisitos..." -ForegroundColor Yellow

# Verifica se Railway CLI est√° instalado
try {
    $railwayVersion = railway --version 2>$null
    if ($railwayVersion) {
        Write-Host "  ‚úÖ Railway CLI: $railwayVersion" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå Railway CLI n√£o encontrado" -ForegroundColor Red
        Write-Host "`nüì• Instalando Railway CLI..." -ForegroundColor Yellow
        
        # Instala Railway CLI
        npm install -g @railway/cli
        
        Write-Host "  ‚úÖ Railway CLI instalado!" -ForegroundColor Green
    }
} catch {
    Write-Host "  ‚ö†Ô∏è  Tentando instalar Railway CLI..." -ForegroundColor Yellow
    try {
        npm install -g @railway/cli
        Write-Host "  ‚úÖ Railway CLI instalado!" -ForegroundColor Green
    } catch {
        Write-Host "  ‚ùå N√£o foi poss√≠vel instalar Railway CLI" -ForegroundColor Red
        Write-Host "    Instale manualmente: npm install -g @railway/cli" -ForegroundColor Red
        exit 1
    }
}

# Verifica se Git est√° configurado
try {
    $gitStatus = git status 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "  ‚úÖ Reposit√≥rio Git configurado" -ForegroundColor Green
    } else {
        Write-Host "  ‚ö†Ô∏è  Inicializando reposit√≥rio Git..." -ForegroundColor Yellow
        git init
        Write-Host "  ‚úÖ Git inicializado" -ForegroundColor Green
    }
} catch {
    Write-Host "  ‚ùå Git n√£o est√° dispon√≠vel" -ForegroundColor Red
    exit 1
}

# 2. Prepara arquivos para deploy
Write-Host "`nüìÅ Preparando arquivos..." -ForegroundColor Yellow

# Copia Dockerfile otimizado
Copy-Item "Dockerfile.railway" "Dockerfile" -Force
Write-Host "  ‚úÖ Dockerfile Railway configurado" -ForegroundColor Green

# Verifica se .gitignore est√° correto
if (-not (Test-Path ".gitignore")) {
    Write-Host "  ‚ö†Ô∏è  Criando .gitignore..." -ForegroundColor Yellow
    Copy-Item ".gitignore" ".gitignore.bak" -ErrorAction SilentlyContinue
}

# Adiciona arquivos ao Git
Write-Host "`nüì§ Adicionando arquivos ao Git..." -ForegroundColor Yellow
git add .
git commit -m "üöÇ Preparando deploy Railway" 2>$null

Write-Host "  ‚úÖ Arquivos preparados para deploy" -ForegroundColor Green

# 3. Instruc√µes de deploy
Write-Host "`nüöÄ PR√ìXIMOS PASSOS:" -ForegroundColor Cyan
Write-Host "===================" -ForegroundColor Cyan

Write-Host "`n1Ô∏è‚É£  Fa√ßa login no Railway:" -ForegroundColor Yellow
Write-Host "   railway login" -ForegroundColor White

Write-Host "`n2Ô∏è‚É£  Crie um novo projeto:" -ForegroundColor Yellow
Write-Host "   railway new" -ForegroundColor White

Write-Host "`n3Ô∏è‚É£  Fa√ßa o deploy:" -ForegroundColor Yellow
Write-Host "   railway up" -ForegroundColor White

Write-Host "`n4Ô∏è‚É£  Abra no navegador:" -ForegroundColor Yellow
Write-Host "   railway open" -ForegroundColor White

Write-Host "`nüìã COMANDOS √öTEIS:" -ForegroundColor Cyan
Write-Host "   railway logs       # Ver logs" -ForegroundColor Gray
Write-Host "   railway status     # Status do projeto" -ForegroundColor Gray
Write-Host "   railway variables  # Gerenciar vari√°veis" -ForegroundColor Gray
Write-Host "   railway domain     # Configurar dom√≠nio" -ForegroundColor Gray

Write-Host "`nüéâ TUDO PRONTO PARA RAILWAY!" -ForegroundColor Green
Write-Host "Execute os comandos acima na ordem para fazer deploy." -ForegroundColor White